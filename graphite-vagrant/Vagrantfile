# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.

  config.vm.box = "centos64min"
  config.vm.box_url = "http://leleupi.its.yale.edu:8181/PKG/centos64min.box"

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  config.vm.network :forwarded_port, guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network :private_network, ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network :public_network

  # If true, then any SSH connections made will enable agent forwarding.
  # Default value: false
  config.ssh.forward_agent = true

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider :virtualbox do |vb|
    # Don't boot with headless mode
    vb.gui = false
  
    # Use VBoxManage to customize the VM. For example to change memory:
    vb.customize ["modifyvm", :id, "--memory", "1024"]
  end

  config.vm.provision :chef_solo do |chef|
    chef.cookbooks_path   = "../chef-repo-yu/cookbooks"
    chef.roles_path       = "../chef-repo-yu/roles"
    chef.data_bags_path   = "../chef-repo-yu/data_bags"

    chef.add_recipe "misc::hosts"
    chef.add_recipe "yum"
    chef.add_recipe "apache2"
    chef.add_recipe "memcached"
    chef.add_recipe "mysql::server"
    chef.add_recipe "mysql::client"
    chef.add_recipe "mysql::ruby"
    chef.add_recipe "database"
    chef.add_recipe "python"
    chef.add_recipe "graphite"
    chef.add_recipe "graphite::apache2"
    
    # You may also specify custom JSON attributes:
    chef.json.merge!({
                        "misc"    => {  :hostname => "graphite" },
                        "mysql"   => {
                                        "server_root_password"    => "iloverandompasswordsbutthiswilldo",
                                        "server_repl_password"    => "iloverandompasswordsbutthiswilldo",
                                        "server_debian_password"  => "iloverandompasswordsbutthiswilldo",
                                        "bind_address"            => "0.0.0.0"
                                    },
                    })
  end
end
